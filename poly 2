#include <iostream>

using namespace std;

class Shape {
public:
    virtual double area()  {
        cout << "Base class area." << endl;
        return 0.0;
    }
};

class Rectangle : public Shape {
private:
    double length;
    double width;

public:
    Rectangle(double l, double w) : length(l), width(w) {}

    double area() override {
        cout << "Rectangle area." << endl;
        return length * width;
    }
};

class Circle : public Shape {
private:
    double radius;

public:
    Circle(double r) : radius(r) {}

    double area() override {
        cout << "Circle area." << endl;
        return 3.14 * radius * radius;
    }
};

int main() {
    Shape* shapePtr;

    Rectangle rectangle(5, 3);
    Circle circle(4);

    shapePtr = &rectangle;
    cout << "Area of Rectangle: " << shapePtr->area() << endl;

    shapePtr = &circle;
    cout << "Area of Circle: " << shapePtr->area() << endl;

    return 0;
}
